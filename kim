#!/usr/bin/perl

# Klint Instant Messanger - A minimal terminal chat application that you can pipe into

# ----------------------------------------------------------------------------
# "THE BEER-WARE LICENSE":
# Frank Ellis wrote this file. As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.
# ----------------------------------------------------------------------------


use strict;
use warnings;

# These need to be installed
use LWP::UserAgent;
use Getopt::Std;

## THIS NEEDS FILLED IN ##
my $url = "";

$url .= "kim_server";


sub help {

print "
  Usage: 
	PIPE | ./kim ARGS 
		
 		OR
 	
	./kim args		
 	
      	ARGS:
       -w MESSAGE => write message
       -r1        => read messages
       -l LIMIT   => the number of messages to limit to
       -c1        => clear history
       -h1  	  => show this help	

 Examples:
	
	= Send a message
 		./kim -w 'Something to say'

	= Read the last five messages
		./kim -r1 -l5
	
	= pipe echo into KIM
		echo 'Somthing to say' | ./kim

	= pipe cat into KIM
   		cat file.txt | ./kim

 	= Write the last message to file
		./kim -r1 -l1 >file.txt
	
	= Clear the history [*]
		./kim -c1


  [*]: All messages go to the same chatroom and 'clear' will empty the chatroom history entirely\n";
}

my %Options;
getopt('wrlch', \%Options);

if ($Options{h}) {
	&help();
}

my $data;

if ($Options{w}||$Options{r}||$Options{c}) {
	$data = $Options{w};
} else {
	while (<STDIN>) {
		$data.=$_;
	}
}	


# Get the username to sign the message
my $username = $ENV{LOGNAME} || $ENV{USER} || getpwuid($<);

# Create a uri to represent the script
my $uri = URI->new( $url );

# Read messages
if ($Options{r}) {
	$uri->query_form(	limit => $Options{l},  # Limit results (number to limit to)
				clear => $Options{c}); # clear history (Any value means clear all)
# Write message
} else {
	$uri->query_form(	data => $data, # Pass the first arg as a message
				username => $username, # pass a username to sign the message
				limit => $Options{l},  # Limit results (number to limit to)
				clear => $Options{c}); # clear history (Any value means clear all)
}

# Get the response from the server
my $ua = LWP::UserAgent->new();
my $resp = $ua->get($uri);

# Print the result
print $resp->content
